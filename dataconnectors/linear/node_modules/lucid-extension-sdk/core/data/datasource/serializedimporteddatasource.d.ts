import { isObject, isString } from '../../checks';
import { SerializedDataItems } from '../serializedfield/serializeddataitems';
import { SerializedSchema, isSerializedSchema } from '../serializedfield/serializedschema';
import { SerializedDataSourceProperties } from './serializeddatasourceproperties';
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
export interface SerializedImportedMetadataCollection {
    'Name': string;
    'Schema': SerializedSchema;
    'Items': SerializedDataItems;
}
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
export declare const isSerializedImportedMetadataCollection: (subject: unknown) => subject is import("../../guards").DestructureGuardedTypeObj<{
    Name: typeof isString;
    Schema: typeof isSerializedSchema;
    Items: (x: unknown) => x is Record<any, Record<any, import("../serializedfield/serializedfields").SerializedFieldType>>;
}>;
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
export interface SerializedImportedCollection {
    'Name': string;
    'Schema': SerializedSchema;
    'Items': SerializedDataItems;
    'UpstreamConfig': {
        [key: string]: any;
    };
    'Metadata': {
        [key: string]: SerializedImportedMetadataCollection;
    };
    'DataIsPartial'?: true | undefined;
}
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
export declare const isSerializedImportedCollection: (subject: unknown) => subject is import("../../guards").DestructureGuardedTypeObj<{
    Name: typeof isString;
    Schema: typeof isSerializedSchema;
    Items: (x: unknown) => x is Record<any, Record<any, import("../serializedfield/serializedfields").SerializedFieldType>>;
    UpstreamConfig: typeof isObject;
    Metadata: (val: unknown) => val is Record<string, import("../../guards").DestructureGuardedTypeObj<{
        Name: typeof isString;
        Schema: typeof isSerializedSchema;
        Items: (x: unknown) => x is Record<any, Record<any, import("../serializedfield/serializedfields").SerializedFieldType>>;
    }>>;
    DataIsPartial: (x: unknown) => x is true | undefined;
}>;
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
export interface SerializedImportedDataSource {
    'Properties': SerializedDataSourceProperties;
    'Collections': SerializedImportedCollection[];
}
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
export declare const isSerializedImportedDataSource: (subject: unknown) => subject is import("../../guards").DestructureGuardedTypeObj<{
    Properties: (subject: unknown) => subject is import("../../guards").DestructureGuardedTypeObj<{
        Name: typeof isString;
        UpstreamConfig: (x: unknown) => x is import("../../guards").DestructureGuardedTypeObj<{
            SourceType: (x: unknown) => x is import("./datasourcetype").DataSourceType;
            UpdateType: (x: unknown) => x is import("./upstreamupdatetype").UpstreamUpdateType;
            PatchType: (x: unknown) => x is import("./upstreampatchtype").UpstreamPatchType | null | undefined;
            SourceConfig: typeof isObject;
        }> | null | undefined;
    }>;
    Collections: (val: unknown) => val is import("../../guards").DestructureGuardedTypeObj<{
        Name: typeof isString;
        Schema: typeof isSerializedSchema;
        Items: (x: unknown) => x is Record<any, Record<any, import("../serializedfield/serializedfields").SerializedFieldType>>;
        UpstreamConfig: typeof isObject;
        Metadata: (val: unknown) => val is Record<string, import("../../guards").DestructureGuardedTypeObj<{
            Name: typeof isString;
            Schema: typeof isSerializedSchema;
            Items: (x: unknown) => x is Record<any, Record<any, import("../serializedfield/serializedfields").SerializedFieldType>>;
        }>>;
        DataIsPartial: (x: unknown) => x is true | undefined;
    }>[];
}>;
