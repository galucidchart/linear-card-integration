"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LucidSpreadsheetIntegration = exports.isImportedResults = exports.lucidSpreadsheetIntegrationFailureTypeValidator = exports.LucidSpreadsheetIntegrationFailureType = void 0;
const checks_1 = require("../checks");
const serializedupstreamconfig_1 = require("../data/datasource/serializedupstreamconfig");
const serializedschema_1 = require("../data/serializedfield/serializedschema");
const jsonserializable_1 = require("../jsonserializable");
const validators_1 = require("../validators/validators");
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
var LucidSpreadsheetIntegrationFailureType;
(function (LucidSpreadsheetIntegrationFailureType) {
    LucidSpreadsheetIntegrationFailureType["AuthorizationFailure"] = "AuthorizationFailure";
    LucidSpreadsheetIntegrationFailureType["GenericFailure"] = "GenericFailure";
    LucidSpreadsheetIntegrationFailureType["UserCancelled"] = "UserCanceled";
})(LucidSpreadsheetIntegrationFailureType || (exports.LucidSpreadsheetIntegrationFailureType = LucidSpreadsheetIntegrationFailureType = {}));
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
exports.lucidSpreadsheetIntegrationFailureTypeValidator = (0, validators_1.stringEnumValidator)(LucidSpreadsheetIntegrationFailureType);
exports.isImportedResults = (0, validators_1.strictObjectValidator)({
    'dataSourceId': checks_1.isString,
    'syncDataSourceId': checks_1.isString,
    'upstreamConfig': serializedupstreamconfig_1.isSerializedUpstreamConfig,
    'collections': (0, validators_1.arrayValidator)((0, validators_1.strictObjectValidator)({
        'collectionId': checks_1.isString,
        'headerRow': checks_1.isNumber,
        'schema': serializedschema_1.isSerializedSchema,
        'upstreamConfig': jsonserializable_1.isJsonSerializable,
    })),
});
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
class LucidSpreadsheetIntegration {
}
exports.LucidSpreadsheetIntegration = LucidSpreadsheetIntegration;
