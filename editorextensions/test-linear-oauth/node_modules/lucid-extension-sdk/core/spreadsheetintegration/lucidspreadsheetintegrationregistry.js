"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LucidSpreadsheetIntegrationRegistry = void 0;
const lucidspreadsheetintegration_1 = require("./lucidspreadsheetintegration");
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
class LucidSpreadsheetIntegrationRegistry {
    static nextHookName() {
        return '__lucidspreadsheet__hook' + this.nextHookId++;
    }
    /**
     * Register a spreadsheet integration.
     */
    static addSpreadsheetIntegration(client, spreadsheetIntegration) {
        const getSpreadsheetDetailsToImportActionName = LucidSpreadsheetIntegrationRegistry.nextHookName();
        client.registerAction(getSpreadsheetDetailsToImportActionName, async () => {
            try {
                return await spreadsheetIntegration.getSpreadsheetDetailsToImport();
            }
            catch (error) { }
            return lucidspreadsheetintegration_1.LucidSpreadsheetIntegrationFailureType.GenericFailure;
        });
        const getMultipleSheetsForSpreadsheetDetailsActionName = LucidSpreadsheetIntegrationRegistry.nextHookName();
        client.registerAction(getMultipleSheetsForSpreadsheetDetailsActionName, async (message) => {
            try {
                const result = await spreadsheetIntegration.getMultipleSheetsForSpreadsheetDetails(message['spreadsheetDetails']);
                if ((0, lucidspreadsheetintegration_1.lucidSpreadsheetIntegrationFailureTypeValidator)(result)) {
                    return result;
                }
                else {
                    // Serialize the Map
                    return Array.from(result);
                }
            }
            catch (error) { }
            return lucidspreadsheetintegration_1.LucidSpreadsheetIntegrationFailureType.GenericFailure;
        });
        const serialized = {
            'ld': spreadsheetIntegration.labelDescription,
            'li': spreadsheetIntegration.labelIconUrl,
            'dc': spreadsheetIntegration.dataConnectorName,
            'gs': getSpreadsheetDetailsToImportActionName,
            'gm': getMultipleSheetsForSpreadsheetDetailsActionName,
        };
        client.sendCommand("asi" /* CommandName.AddSpreadsheetIntegration */, serialized);
    }
}
exports.LucidSpreadsheetIntegrationRegistry = LucidSpreadsheetIntegrationRegistry;
LucidSpreadsheetIntegrationRegistry.nextHookId = 0;
