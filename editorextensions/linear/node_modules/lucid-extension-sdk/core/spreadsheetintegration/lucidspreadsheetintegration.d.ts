import { SerializedUpstreamConfig } from '../data/datasource/serializedupstreamconfig';
import { SerializedSchema } from '../data/serializedfield/serializedschema';
import { JsonSerializable } from '../jsonserializable';
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
export declare enum LucidSpreadsheetIntegrationFailureType {
    AuthorizationFailure = "AuthorizationFailure",
    GenericFailure = "GenericFailure",
    UserCancelled = "UserCanceled"
}
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
export declare const lucidSpreadsheetIntegrationFailureTypeValidator: (x: unknown) => x is LucidSpreadsheetIntegrationFailureType;
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
export type ImportedResults = {
    'dataSourceId': string;
    'syncDataSourceId': string;
    'upstreamConfig': SerializedUpstreamConfig;
    'collections': {
        'collectionId': string;
        'headerRow': number;
        'schema': SerializedSchema;
        'upstreamConfig'?: JsonSerializable;
    }[];
};
export declare const isImportedResults: (x: unknown) => x is ImportedResults;
/** @ignore until spreadsheet integration is ready for launch (CHART-51946) */
export declare abstract class LucidSpreadsheetIntegration<CONFIG extends JsonSerializable, SHEET extends JsonSerializable> {
    abstract labelDescription: string;
    abstract labelIconUrl: string;
    abstract dataConnectorName: string;
    abstract getSpreadsheetDetailsToImport(): Promise<CONFIG | LucidSpreadsheetIntegrationFailureType>;
    abstract getMultipleSheetsForSpreadsheetDetails(spreadsheetDetails: CONFIG): Promise<Map<SHEET, string> | LucidSpreadsheetIntegrationFailureType>;
}
